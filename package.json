{
	"name": "vscode-cosmosdb",
	"version": "0.2.1",
	"aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
	"publisher": "ms-azuretools",
	"displayName": "Azure Cosmos DB",
	"description": "Create, browse, and update globally distributed, multi-model databases in Azure.",
	"engines": {
		"vscode": "^1.17.0"
	},
	"galleryBanner": {
		"color": "#0072c6",
		"theme": "dark"
	},
	"icon": "resources/cosmos.png",
	"categories": [
		"Azure"
	],
	"keywords": [
		"Cosmos DB",
		"DocumentDB",
		"Graph",
		"Gremlin",
		"MongoDB"
	],
	"preview": true,
	"homepage": "https://github.com/microsoft/vscode-cosmosdb/blob/master/README.md",
	"bugs": {
		"url": "https://github.com/microsoft/vscode-cosmosdb/issues"
	},
	"license": "SEE LICENSE IN LICENSE.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/microsoft/vscode-cosmosdb"
	},
	"main": "./out/src/extension",
	"activationEvents": [
		"onView:cosmosDBExplorer",
		"onCommand:cosmosDB.executeMongoCommand",
		"onCommand:cosmosDB.attachMongoServer",
		"onCommand:cosmosDB.createAccount",
		"onCommand:cosmosDB.removeMongoServer",
		"onCommand:cosmosDB.createMongoDatabase",
		"onCommand:cosmosDB.createMongoCollection",
		"onCommand:cosmosDB.createMongoDocument",
		"onCommand:cosmosDB.createDocDBDatabase",
		"onCommand:cosmosDB.createDocDBCollection",
		"onCommand:cosmosDB.createDocDBDocument",
		"onCommand:cosmosDB.createGraphDatabase",
		"onCommand:cosmosDB.createGraph",
		"onCommand:cosmosDB.connectMongoDB",
		"onCommand:cosmosDB.deleteMongoDB",
		"onCommand:cosmosDB.deleteMongoCollection",
		"onCommand:cosmosDB.deleteMongoDocument",
		"onCommand:cosmosDB.deleteDocDBDatabase",
		"onCommand:cosmosDB.deleteDocDBCollection",
		"onCommand:cosmosDB.deleteDocDBDocument",
		"onCommand:cosmosDB.deleteGraphDatabase",
		"onCommand:cosmosDB.deleteGraph",
		"onCommand:cosmosDB.newMongoScrapbook",
		"onCommand:cosmosDB.update",
		"onCommand:cosmosDB.openDocument",
		"onCommand:cosmosDB.loadMore",
		"onCommand:cosmosDB.refresh",
		"onCommand:cosmosDB.openInPortal",
		"onCommand:cosmosDB.copyConnectionString",
		"onCommand:cosmosDB.launchMongoShell"
	],
	"contributes": {
		"views": {
			"explorer": [
				{
					"id": "cosmosDBExplorer",
					"name": "Azure Cosmos DB",
					"when": "config.cosmosDB.showExplorer == true"
				}
			]
		},
		"languages": [
			{
				"id": "mongo",
				"extensions": [
					".mongo"
				],
				"firstLine": "^#!/.*\\bmongo*\\b",
				"configuration": "./grammar/configuration.json"
			}
		],
		"grammars": [
			{
				"language": "mongo",
				"scopeName": "source.js",
				"path": "./grammar/JavaScript.tmLanguage.json"
			},
			{
				"scopeName": "source.js.regexp",
				"path": "./grammar/Regular Expressions (JavaScript).tmLanguage"
			}
		],
		"commands": [
			{
				"category": "MongoDB",
				"command": "cosmosDB.executeMongoCommand",
				"title": "Execute Command"
			},
			{
				"category": "MongoDB",
				"command": "cosmosDB.launchMongoShell",
				"title": "Launch Shell"
			},
			{
				"category": "Cosmos DB",
				"command": "cosmosDB.attachMongoServer",
				"title": "Attach Mongo Server",
				"icon": {
					"light": "resources/icons/light/Connect.svg",
					"dark": "resources/icons/dark/Connect.svg"
				}
			},
			{
				"category": "Cosmos DB",
				"command": "cosmosDB.createAccount",
				"title": "Create Account",
				"icon": {
					"light": "resources/icons/light/add.svg",
					"dark": "resources/icons/dark/add.svg"
				}
			},
			{
				"category": "MongoDB",
				"command": "cosmosDB.createMongoDatabase",
				"title": "Create Database"
			},
			{
				"category": "MongoDB",
				"command": "cosmosDB.createMongoCollection",
				"title": "Create Collection"
			},
			{
				"category": "MongoDB",
				"command": "cosmosDB.createMongoDocument",
				"title": "Create Document"
			},
			{
				"category": "DocumentDB",
				"command": "cosmosDB.createDocDBDatabase",
				"title": "Create Database"
			},
			{
				"category": "DocumentDB",
				"command": "cosmosDB.createDocDBCollection",
				"title": "Create Collection"
			},
			{
				"category": "DocumentDB",
				"command": "cosmosDB.createDocDBDocument",
				"title": "Create Document"
			},
			{
				"category": "Graph",
				"command": "cosmosDB.createGraphDatabase",
				"title": "Create Database"
			},
			{
				"category": "Graph",
				"command": "cosmosDB.createGraph",
				"title": "Create Graph"
			},
			{
				"category": "MongoDB",
				"command": "cosmosDB.removeMongoServer",
				"title": "Remove Server"
			},
			{
				"category": "MongoDB",
				"command": "cosmosDB.connectMongoDB",
				"title": "Connect"
			},
			{
				"category": "MongoDB",
				"command": "cosmosDB.deleteMongoDB",
				"title": "Delete Database"
			},
			{
				"category": "MongoDB",
				"command": "cosmosDB.deleteMongoCollection",
				"title": "Delete Collection"
			},
			{
				"category": "MongoDB",
				"command": "cosmosDB.deleteMongoDocument",
				"title": "Delete Document"
			},
			{
				"category": "DocumentDB",
				"command": "cosmosDB.deleteDocDBDatabase",
				"title": "Delete Database"
			},
			{
				"category": "DocumentDB",
				"command": "cosmosDB.deleteDocDBCollection",
				"title": "Delete Collection"
			},
			{
				"category": "Graph",
				"command": "cosmosDB.deleteGraphDatabase",
				"title": "Delete Database"
			},
			{
				"category": "Graph",
				"command": "cosmosDB.deleteGraph",
				"title": "Delete Graph"
			},
			{
				"category": "DocumentDB",
				"command": "cosmosDB.deleteDocDBDocument",
				"title": "Delete Document"
			},
			{
				"category": "Cosmos DB",
				"command": "cosmosDB.newMongoScrapbook",
				"title": "New Mongo Scrapbook",
				"icon": {
					"light": "resources/icons/light/addFile.svg",
					"dark": "resources/icons/dark/addFile.svg"
				}
			},
			{
				"category": "Cosmos DB",
				"command": "cosmosDB.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/icons/light/refresh.svg",
					"dark": "resources/icons/dark/refresh.svg"
				}
			},
			{
				"category": "CosmosDB",
				"command": "cosmosDB.openInPortal",
				"title": "Open In Portal"
			},
			{
				"category": "CosmosDB",
				"command": "cosmosDB.copyConnectionString",
				"title": "Copy Connection String"
			},
			{
				"category": "CosmosDB",
				"command": "cosmosDB.update",
				"title": "Update to Azure",
				"icon": {
					"light": "/resources/icons/theme-agnostic/UpdateOutline.svg",
					"dark": "/resources/icons/theme-agnostic/UpdateOutline.svg"
				}
			},
			{
				"category": "DocumentDB",
				"command": "cosmosDB.loadMore",
				"title": "Load More"
			},
			{
				"category": "CosmosDB",
				"command": "cosmosDB.openDocument",
				"title": "Open Document"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "cosmosDB.executeMongoCommand",
					"when": "resourceLangId==mongo"
				},
				{
					"command": "cosmosDB.update",
					"when": "resourceFilename==cosmos-document.json"
				}
			],
			"editor/title": [
				{
					"command": "cosmosDB.update",
					"when": "resourceFilename==cosmos-document.json",
					"group": "navigation"
				}
			],
			"view/title": [
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer",
					"group": "navigation"
				},
				{
					"command": "cosmosDB.createAccount",
					"when": "view == cosmosDBExplorer",
					"group": "navigation"
				},
				{
					"command": "cosmosDB.attachMongoServer",
					"when": "view == cosmosDBExplorer",
					"group": "navigation"
				},
				{
					"command": "cosmosDB.newMongoScrapbook",
					"when": "view == cosmosDBExplorer",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "cosmosDB.createMongoDatabase",
					"when": "view == cosmosDBExplorer && viewItem == mongoServer"
				},
				{
					"command": "cosmosDB.createMongoDatabase",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBMongoServer"
				},
				{
					"command": "cosmosDB.createMongoDocument",
					"when": "view == cosmosDBExplorer && viewItem == MongoCollection"
				},
				{
					"command": "cosmosDB.createMongoCollection",
					"when": "view == cosmosDBExplorer && viewItem == mongoDb"
				},
				{
					"command": "cosmosDB.createDocDBDocument",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocumentCollection"
				},
				{
					"command": "cosmosDB.createDocDBCollection",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocumentDatabase"
				},
				{
					"command": "cosmosDB.createDocDBDatabase",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocumentServer"
				},
				{
					"command": "cosmosDB.createGraphDatabase",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBGraphAccount"
				},
				{
					"command": "cosmosDB.createGraph",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBGraphDatabase"
				},
				{
					"command": "cosmosDB.removeMongoServer",
					"when": "view == cosmosDBExplorer && viewItem == mongoServer"
				},
				{
					"command": "cosmosDB.connectMongoDB",
					"when": "view == cosmosDBExplorer && viewItem == mongoDb"
				},
				{
					"command": "cosmosDB.deleteMongoDB",
					"when": "view == cosmosDBExplorer && viewItem == mongoDb"
				},
				{
					"command": "cosmosDB.deleteMongoCollection",
					"when": "view == cosmosDBExplorer && viewItem == MongoCollection"
				},
				{
					"command": "cosmosDB.deleteMongoDocument",
					"when": "view == cosmosDBExplorer && viewItem == MongoDocument"
				},
				{
					"command": "cosmosDB.deleteDocDBCollection",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocumentCollection"
				},
				{
					"command": "cosmosDB.deleteDocDBDocument",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocument"
				},
				{
					"command": "cosmosDB.deleteDocDBDatabase",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocumentDatabase"
				},
				{
					"command": "cosmosDB.deleteGraphDatabase",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBGraphDatabase"
				},
				{
					"command": "cosmosDB.deleteGraph",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBGraph"
				},
				{
					"command": "cosmosDB.attachMongoServer",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBAttachedServers"
				},
				{
					"command": "cosmosDB.openInPortal",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBMongoServer"
				},
				{
					"command": "cosmosDB.openInPortal",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBGenericResource"
				},
				{
					"command": "cosmosDB.openInPortal",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocumentServer"
				},
				{
					"command": "cosmosDB.openInPortal",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBGraphAccount"
				},
				{
					"command": "cosmosDB.copyConnectionString",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBMongoServer"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBSubscription"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBMongoServer"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocumentCollection"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocumentDatabase"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBDocumentServer"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBGraphAccount"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == cosmosDBGraphDatabase"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == mongoServer"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == mongoDb"
				},
				{
					"command": "cosmosDB.refresh",
					"when": "view == cosmosDBExplorer && viewItem == MongoCollection"
				}
			]
		},
		"keybindings": [
			{
				"command": "cosmosDB.executeMongoCommand",
				"key": "ctrl+shift+'",
				"mac": "cmd+shift+'",
				"when": "editorLangId == 'mongo' && editorTextFocus"
			}
		],
		"configuration": {
			"title": "Cosmos DB",
			"properties": {
				"mongo.shell.path": {
					"type": [
						"string",
						"null"
					],
					"description": "Path to the Mongo shell executable",
					"default": null,
					"isExecutable": true
				},
				"cosmosDB.showExplorer": {
					"type": "boolean",
					"default": true,
					"description": "Show or hide the Cosmos DB Explorer"
				},
				"cosmosDB.mongo.maxDocs": {
					"type": "integer",
					"default": 20,
					"description": "Set a page limit for number of results(documents) displayed"
				},
				"cosmosDB.graph.maxVertices": {
					"type": "integer",
					"default": 300,
					"description": "Set a limit for number of vertices displayed in a graph visualization"
				},
				"cosmosDB.graph.maxEdges": {
					"type": "integer",
					"default": 500,
					"description": "Set a limit for number of edges displayed in a graph visualization"
				},
				"cosmosDB.graph.viewSettings": {
					"type": "object",
					"additionalProperties": false,
					"properties": {
						"vertices": {
							"type": "array",
							"title": "List of settings that apply to vertices having a given label value",
							"items": {
								"type": "object",
								"required": [
									"labelValue"
								],
								"additionalProperties": false,
								"properties": {
									"labelValue": {
										"type": "string",
										"description": "These settings will apply to all vertices whose label value matches the one specified here"
									},
									"displayProperty": {
										"type": [
											"string",
											"array"
										],
										"description": "The vertex property to display for the text. If an array, the first specified property that exists on the vertex will be used.",
										"default": "id"
									},
									"color": {
										"type": "string",
										"description": "The vertex color, either a CSS color name or RGB value (e.g., '#0088FF')",
										"pattern": "^([a-zA-Z]+)|(#[0-9a-fA-F]{3})|(#[0-9a-fA-F]{6})$",
										"default": "#0072c6"
									}
								}
							}
						}
					},
					"default": {
						"vertices": [
							{
								"labelValue": "person",
								"displayProperty": "id"
							}
						]
					},
					"description": "Settings for graph visualization"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"compile": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "node ./node_modules/vscode/bin/test",
		"antlr4ts": "antlr4ts -visitor ./grammar/mongo.g4 -o ./src"
	},
	"devDependencies": {
		"@types/copy-paste": "^1.1.30",
		"@types/documentdb": "^1.10.2",
		"@types/fs-extra": "^4.0.3",
		"@types/keytar": "4.0.1",
		"@types/mocha": "^2.2.32",
		"@types/mongodb": "^2.2.9",
		"@types/node": "^6.0.40",
		"@types/socket.io": "^1.4.28",
		"@types/socket.io-client": "^1.4.27",
		"antlr4ts-cli": "^0.4.0-alpha.4",
		"mocha": "^2.3.3",
		"typescript": "^2.0.3",
		"vscode": "^1.0.0"
	},
	"dependencies": {
		"antlr4ts": "^0.4.0-alpha.4",
		"azure-arm-documentdb": "^1.0.0-preview",
		"azure-arm-resource": "^2.0.0-preview",
		"azure-graph": "^2.2.0",
		"copy-paste": "^1.3.0",
		"d3": "^3.0.0",
		"documentdb": "^1.12.2",
		"gremlin": "^2.6.0",
		"fs-extra": "^4.0.2",
		"mongodb": "^2.2.25",
		"ms-rest": "^2.2.1",
		"opn": "^5.1.0",
		"request-light": "^0.2.0",
		"socket.io": "^1.7.3",
		"socket.io-client": "^1.7.3",
		"underscore": "^1.8.3",
		"vscode-extension-telemetry": "^0.0.8",
		"vscode-json-languageservice": "^2.0.9",
		"vscode-languageclient": "^3.1.0-alpha.1",
		"vscode-languageserver": "^3.1.0-alpha.1",
		"vscode-nls": "^2.0.2",
		"vscode-uri": "^1.0.0"
	},
	"extensionDependencies": [
		"ms-vscode.azure-account"
	]
}
